/*
1. 문제
수많은 마라톤 선수들이 마라톤에 참여하였습니다. 단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다.
마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열 completion이 주어질 때, 
완주하지 못한 선수의 이름을 return 하도록 solution 함수를 작성해주세요.

조건 1) 참여 선수 1명 이상 100000명 이하
     2) completion길이는 participant길이보다 1작다.
     3) 동명이인 있을 수 있다.
     4) 참가자 이름은 1개이상 20개이하 알파벳 소문자.
     
2. 풀이
HashMap을 이용하여 hashmap에 key값을 참가자의 이름, value는 +1을하여 갯수가 되는 map을 만든다.
participant에서 참가자의 이름을 변수 part에 넣어 part에 들어있는 값이 getOrDefult를 사용하여 키값이 존재할 때는 본래의 값을 리턴하고,
존재하지 않을때는 디폴트 값인 0을 리턴, 그리고 그 값에 +1한 값을 map에 넣는다.
completion에 존재하는 값은 map에서 가져와 -1해준다.
map의 값 전체를 불러오기 위해서는 entrySet()과 keySet()이 있는데 출력에 key값만 사용되기 때문에
keySet()을 사용하여 map에 있는 값이 0보다 큰 경우 출력해준다.

3. 한 번에 풀지 못했다면 이유?
Hash에 대한 기본 지식이 부족하였고, 코드를 봐도 이해를 못했는데
지금도 완전히 이해한 것보다는 hash라는게 뭔지 좀 알게된 것 같다.
문제를 더 풀어봐야겠다.

---------------------------------------------------------------------------------*/

import java.util.HashMap;
import java.util.Map.Entry;

class Solution {
    public String solution(String[] participant, String[] completion) {
        String answer = "";
        
        HashMap <String, Integer> map=new HashMap();
        for(String part:participant){
            map.put(part, map.getOrDefault(part,0)+1);
        }
        for(String com:completion ){
            map.put(com, map.get(com)-1);
        }
        for(String fail:map.keySet()){
            if(map.get(fail)>0){
                answer=fail;
                break;
            }
        }
        return answer;
    }
    public static void main(String[] args) {

		System.out.println(solution(new String[] { "mislav", "stanko", "mislav", "ana" },
				new String[] { "stanko", "ana", "mislav" }));
	}
}
