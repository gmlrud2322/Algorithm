/*
1. 문제: 곱셈
자연수 A를 B번 곱한 수를 알고 싶다. 
단 구하려는 수가 매우 커질 수 있으므로 이를 C로 나눈 나머지를 구하는 프로그램을 작성하시오.

입력) 첫째 줄에 A, B, C가 빈 칸을 사이에 두고 순서대로 주어진다. 
      A, B, C는 모두 2,147,483,647 이하의 자연수이다.
출력) 첫째 줄에 A를 B번 곱한 수를 C로 나눈 나머지를 출력한다.

2. 풀이
지수법칙과 모듈러 성질을 이용한다.
10^11=10^5*10^5*10 
=(10^2*10^2*10)*(10^2*10^2*10)*10
=10*10*10*10*10*10*10*10*10*10*10
로 나타낼 수 있다.
이 점을 이용하여 pow()함수를 만들어준다.
  1)B가 1인경우 A*1이므로 A
  2)temp는 지수의 절반 값
  3)B가 홀수인 경우->temp*temp*A
  4)짝수인 경우->temp*temp
  5)모듈러 성질 이용 (X*Y)%C=(X%C*Y%C)%C
    ->조건의 수가 굉장히 크기 때문에 long타입도 범위를 벗어나게됨
    
3. 한 번에 풀지 못 했다면 이유?
분할 정복의 개념에 대해 처음 알았다. 다른 사람의 풀이를 보고 이해했다...

------------------------------------------------------------------------*/

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.IOException;
import java.util.StringTokenizer;

class Main{
  static long C;
  public static void main(String[] args) throws IOException{
    BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
    BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(System.out));
    
    StringTokenizer st=new StringTokenizer(br.readLine()," ");
    long A=Long.parseLong(st.nextToken());
    long B=Long.parseLong(st.nextToken());
    C=Long.parseLong(st.nextToken());

    bw.write(String.valueOf(pow(A,B)));
  
    bw.close();
  }

  static long pow(long A, long B){

    if(B==1){
      return A%C;
    }
    long temp=pow(A,B/2); //분할 정복, 지수의 절반을 구한다.

    if(B%2==1){
      return (temp%C*temp%C)*A%C;
    }
    return temp%C*temp%C;
  }
}
