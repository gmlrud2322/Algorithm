/*
1. 문제: 제로
입력) 첫 번째 줄에 정수 K가 주어진다. (1 ≤ K ≤ 100,000)
     이후 K개의 줄에 정수가 1개씩 주어진다. 정수는 0에서 1,000,000 사이의 값을 가지며, 
     정수가 "0" 일 경우에는 가장 최근에 쓴 수를 지우고, 아닐 경우 해당 수를 쓴다.
     정수가 "0"일 경우에 지울 수 있는 수가 있음을 보장할 수 있다.
출력) 재민이가 최종적으로 적어 낸 수의 합을 출력한다. 최종적으로 적어낸 수의 합은 2^31-1보다 작거나 같은 정수이다.

2. 풀이
Stack을 사용하여 0을 입력할 때는 pop(), 나머지는 push()를 해주면 된다.
Stack에 있는 모든 값을 sum에 합해준 뒤, 출력하면 된다.

3. 한 번에 풀지 못했다면 이유?
-------------------------------------------------------------------------------*/

import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.util.Stack;
class Main{
  public static void main(String[] args) throws IOException{
    BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
    int K=Integer.parseInt(br.readLine());
    Stack<Integer> stack=new Stack<Integer>();
    for(int i=0;i<K;i++){
      int input=Integer.parseInt(br.readLine());
      if(input==0){
        stack.pop();}
      else{
        stack.push(input);}
    }
    int sum=0;
    while(!stack.isEmpty()){
      sum+=stack.pop();
    }
    System.out.println(sum);
  }
}
