/*
1. 문제: 좌표 압축
수직선 위에 N개의 좌표 X1, X2, ..., XN이 있다. 이 좌표에 좌표 압축을 적용하려고 한다.
Xi를 좌표 압축한 결과 X'i의 값은 Xi > Xj를 만족하는 서로 다른 좌표의 개수와 같아야 한다.
X1, X2, ..., XN에 좌표 압축을 적용한 결과 X'1, X'2, ..., X'N를 출력해보자.
->결과적으로는 입력받은 배열의 값들 중 중복제외, Xi 보다 작은 수가 몇 개인지 출력하는 것 임.

입력) 첫째 줄에 N이 주어진다.
      둘째 줄에는 공백 한 칸으로 구분된 X1, X2, ..., XN이 주어진다.
출력) 첫째 줄에 X'1, X'2, ..., X'N을 공백 한 칸으로 구분해서 출력한다.

2. 풀이
먼저 X배열에 입력받은 값을 저장한다.
clone()메서드를 사용하면 쉽게 배열을 복사할 수 있다.
복사한 배열 temp-> 결과를 출력할 때 원본 배열이 필요하기 때문
X를 sort()메서드를 사용하여 오름차순으로 정렬해준다.
hashmap을 사용하여 중복된 값은 제외하고, 정렬된 배열 X의 값을 key에 넣는다.
  ->count++은 정렬된 배열을 key에 넣어주는 것이기 때문에 count의 값이 해당 key에 들어간 값보다 작은 숫자의 갯수가 되는 것.

3. 한 번에 풀지 못 했다면 이유?
hashmap에 대한 개념을 잊어버렸다. 그래서 정답풀이를 보고 다시 되새겼다.
hashmap에 관한 문제를 다시 풀어봐야할 것 같다.

-----------------------------------------------------------------------------------*/

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.IOException;
import java.util.StringTokenizer;
import java.util.HashMap;
import java.util.Arrays;


public class Main {
	public static void main(String[] args) throws IOException{
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(System.out));

    int N=Integer.parseInt(br.readLine());
    int[] X=new int[N];
    StringTokenizer st=new StringTokenizer(br.readLine());
    HashMap<Integer,Integer> map=new HashMap<>();
    for(int i=0;i<N;i++){
      X[i]=Integer.parseInt(st.nextToken());
    }
    int[] temp=X.clone();//배열을 복사해주는 메서드
    Arrays.sort(X);

    int count=0;
    for(int i=0;i<X.length;i++){
      if(!map.containsKey(X[i])){
        map.put(X[i],count++);
      }
    }
    for(int i=0;i<N;i++){
      bw.write(String.valueOf(map.get(temp[i]))+" ");
    }
    bw.close();
	}
}
