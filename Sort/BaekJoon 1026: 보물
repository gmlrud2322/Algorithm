/*
1. 문제: 보물
   길이가 N인 정수 배열 A와 B가 있다. 다음과 같이 함수 S를 정의하자.
   S = A[0] × B[0] + ... + A[N-1] × B[N-1]
   S의 값을 가장 작게 만들기 위해 A의 수를 재배열하자. 단, B에 있는 수는 재배열하면 안 된다.
   S의 최솟값을 출력하는 프로그램을 작성하시오.

입력) 첫째 줄에 N이 주어진다. 둘째 줄에는 A에 있는 N개의 수가 순서대로 주어지고, 셋째 줄에는 B에 있는 수가 순서대로 주어진다. 
      N은 50보다 작거나 같은 자연수이고, A와 B의 각 원소는 100보다 작거나 같은 음이 아닌 정수이다.
출력) 첫째 줄에 S의 최솟값을 출력한다.

2. 풀이
   문제에선 B는 재배열하면 안된다고 했는데 S의 값만 구하면 되므로 A는 오름차순, B는 내림차순으로 정렬하여 S를 구했다.

3. 한번에 풀지 못했다면 이유?

-----------------------------------------------------------------------------------------------------------------*/

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Collections;

import java.util.StringTokenizer;

public class Main {
  
	public static void main(String[] args) throws IOException{
		
    BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(System.out));
    
    int N=Integer.parseInt(br.readLine());
    int[] A=new int[N];
    Integer[] B=new Integer[N];
    StringTokenizer st;
    
    st=new StringTokenizer(br.readLine());
    for(int j=0;j<N;j++){
      A[j]=Integer.parseInt(st.nextToken());
    }
    st=new StringTokenizer(br.readLine());
    for(int j=0;j<N;j++){
      B[j]=Integer.parseInt(st.nextToken());
    }

    Arrays.sort(A);
    Arrays.sort(B, Collections.reverseOrder());
    
    int S=0;
    for(int i=0;i<N;i++){
      S=S+A[i]*B[i];
    }
    bw.write(String.valueOf(S));
    bw.close();
  }
  
}
