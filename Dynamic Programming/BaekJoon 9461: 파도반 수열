/*
1. 문제: 파도반 수열
나선에서 가장 긴 변의 길이를 k라 했을 때, 그 변에 길이가 k인 정삼각형을 추가한다.
파도반 수열 P(N)은 나선에 있는 정삼각형의 변의 길이이다. 
P(1)부터 P(10)까지 첫 10개 숫자는 1, 1, 1, 2, 2, 3, 4, 5, 7, 9이다.
N이 주어졌을 때, P(N)을 구하는 프로그램을 작성하시오.

입력) 첫째 줄에 테스트 케이스의 개수 T가 주어진다. 
      각 테스트 케이스는 한 줄로 이루어져 있고, N이 주어진다. (1 ≤ N ≤ 100)
출력) 각 테스트 케이스마다 P(N)을 출력한다.

2. 풀이
dp를 사용하여 풀면 쉽게 해결할 수 있다.
N의 크기를 증가시키면 결과가 P[N]=P[N-2]+P[N-3]의 규칙성을 갖고 있다는 것을 알 수 있다.

3. 한 번에 풀지 못했다면 이유?
N의 최대값인 100을 넣었을 때를 확인하면 오버플로우가 발생하여 음수값이 발생하는 것을 알 수 있다.
그래서 int자료형을 long으로 바꿔주면 해결된다.
오버플로우가 발생하는지 꼭 확인을 해야한다.
--------------------------------------------------------------------------------------*/

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.ArrayList;
class Main{
  static long[] p;
  public static void main(String[] args) throws IOException{
    BufferedReader br= new BufferedReader(new InputStreamReader(System.in));
    int T=Integer.parseInt(br.readLine());
    p=new long[101];
    ArrayList<Long> result=new ArrayList<>();
    for(int i=0;i<T;i++){
      int N=Integer.parseInt(br.readLine());
      result.add(triangle(N));
    }
    for(int i=0;i<result.size();i++){
      System.out.println(result.get(i));
    }
  }
  public static long triangle(int N){
    p[1]=1;
    p[2]=1;
    p[3]=1;
    for(int i=4;i<=N;i++){
      p[i]=p[i-2]+p[i-3];
    }
    return p[N];
  }
}
